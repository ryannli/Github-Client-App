// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with no password 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "backgroundColor": "#03A9F4",
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "height": 1334,
        },
        Object {
          "backgroundColor": "#03A9F4",
        },
      ]
    }
    virtual={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flex": 1,
          },
          Object {
            "alignItems": "center",
            "flex": 3,
            "height": 1334,
            "justifyContent": "center",
            "marginBottom": 80.04,
            "marginTop": 80.04,
          },
        ]
      }
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 400.2,
            },
            undefined,
            Object {
              "fontFamily": "zocial",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 2,
            "marginBottom": 10,
            "marginLeft": 10,
            "marginRight": 10,
          },
        ]
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 106.72,
            "marginBottom": 26.68,
            "marginLeft": 15,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="Username"
          placeholderTextColor="rgba(255,255,255,0.7)"
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 106.72,
            "marginBottom": 26.68,
            "marginLeft": 15,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="rgba(255,255,255,0.7)"
          secureTextEntry={true}
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#0277BD",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontFamily": "System",
                "fontSize": 16.5,
                "lineHeight": 19,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Sign In
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`renders correctly with no username 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "backgroundColor": "#03A9F4",
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "height": 1334,
        },
        Object {
          "backgroundColor": "#03A9F4",
        },
      ]
    }
    virtual={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flex": 1,
          },
          Object {
            "alignItems": "center",
            "flex": 3,
            "height": 1334,
            "justifyContent": "center",
            "marginBottom": 80.04,
            "marginTop": 80.04,
          },
        ]
      }
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 400.2,
            },
            undefined,
            Object {
              "fontFamily": "zocial",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Array [
          Object {},
          Object {
            "flex": 2,
            "marginBottom": 10,
            "marginLeft": 10,
            "marginRight": 10,
          },
        ]
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 106.72,
            "marginBottom": 26.68,
            "marginLeft": 15,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="Username"
          placeholderTextColor="rgba(255,255,255,0.7)"
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flexDirection": "row",
            "height": 106.72,
            "marginBottom": 26.68,
            "marginLeft": 15,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="rgba(255,255,255,0.7)"
          secureTextEntry={true}
          style={
            Object {
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 50,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "#0277BD",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontFamily": "System",
                "fontSize": 16.5,
                "lineHeight": 19,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Sign In
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
