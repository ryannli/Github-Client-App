// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  collapsable={undefined}
  onLayout={[Function]}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
      "paddingBottom": 0,
      "paddingLeft": 0,
      "paddingRight": 0,
      "paddingTop": 20,
    }
  }
>
  <RCTScrollView
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <RCTRefreshControl />
    <View>
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={undefined}
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutoAutomaticScroll={true}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        viewIsInsideTabBar={false}
        virtual={undefined}
      >
        <View>
          <View
            closeOnRowBeginSwipe={false}
            closeOnRowPress={true}
            closeOnScroll={true}
            directionalDistanceChangeThreshold={2}
            disableLeftSwipe={false}
            disableRightSwipe={false}
            leftOpenValue={0}
            previewFirstRow={false}
            recalculateHiddenLayout={false}
            rightOpenValue={0}
            style={Object {}}
            swipeToOpenPercent={50}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              loading
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders with same username and ownername 1`] = `
<View
  collapsable={undefined}
  onLayout={[Function]}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
      "paddingBottom": 0,
      "paddingLeft": 0,
      "paddingRight": 0,
      "paddingTop": 20,
    }
  }
>
  <RCTScrollView
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <RCTRefreshControl />
    <View>
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={undefined}
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutoAutomaticScroll={true}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "flex": 1,
            },
          ]
        }
        viewIsInsideTabBar={false}
        virtual={undefined}
      >
        <View>
          <View
            closeOnRowBeginSwipe={false}
            closeOnRowPress={true}
            closeOnScroll={true}
            directionalDistanceChangeThreshold={2}
            disableLeftSwipe={false}
            disableRightSwipe={false}
            leftOpenValue={0}
            previewFirstRow={false}
            recalculateHiddenLayout={false}
            rightOpenValue={0}
            style={Object {}}
            swipeToOpenPercent={50}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            >
              loading
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
